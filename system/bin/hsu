#!/system/bin/sh

# hsu - Hide su and Magisk binaries to prevent programs from reading the binaries using "ls"
# Copyright (C) 2020 xaedoplay @ XDA-Developers

# Main module script


ADBPATH=/data/adb
MMODPATH=$ADBPATH/modules
BBPATH=$ADBPATH/magisk/busybox
ENVPATH=$ADBPATH/.hsu
HSUFSPATH=$ENVPATH/hsu_fs
MODVER=PRERELEASE

if [ -f "$BBPATH" ]; then
	for ITEM in $($BBPATH --list | tail -n +3); do
		alias $ITEM="$BBPATH $ITEM"
	done
fi

. $MMODPATH/common/hsu_functions # INCLUDE FUNCTIONS

# Main user prompt
mainprompt () {
	menuheader "Main menu\n\nIMPORTANT: You need to use global mount namespace mode (available in the Magisk Manager settings, no reboot needed to change settings), for this module to work."
	echo -e "\nWhat would you like to do?"
	echo -e "\n"
	echo -e "(H)ide root and Magisk binaries"
	echo -e "(A)utohide root"
	echo -e "(C)lear up environment"
	echo -e "(Q)uit"
	echo -e "\n"
	while true; do
		echo -e "\nPlease input your choice:"
		read hprompt
		if [ "$hprompt" != "${hprompt#[Hh]}" ] ; then
			hideroot
		elif [ "$hprompt" != "${hprompt#[Aa]}" ] ; then
			autohide
		elif [ "$hprompt" != "${hprompt#[Cc]}" ] ; then
			clearenv
		elif [ "$hprompt" != "${hprompt#[Qq]}" ] ; then
			exit
		else
			echo -e "Invalid input $hprompt. Please input your choice"
		fi
	done
	echo -e "If you read this message, there's a bug within the function\nPlease file an issue on GitHub, or even better, try and fix the bug yourself and open a pull request on GitHub."
	exit 1
}

# First-time user prompt
oobeprompt () {
	menuheader "Welcome"
	echo -e "\nWelcome to hsu!\n\nThis module is useful to hide su and Magisk binaries so apps cannot detect root using the command 'ls'. Keep in mind this module is not the replacement of MagiskHide in any kind (even I might say this module somehow gimped MagiskHide), because of the functional differences.\nFor best results in hiding root you may pair this with MagiskHide, though.\n\nIMPORTANT: You need to use global mount namespace mode (available in the Magisk Manager settings, no reboot needed to change settings), for this to work"
	echo -e $LINEDIV
	echo -e "Would you like to setup hsu?\n"
	while true; do
		echo -e "\n(Y)es or (n)o (case-insensitive):"
		read hprompt
		if [ "$hprompt" != "${hprompt#[Yy]}" ] ; then
			initenv
		elif [ "$hprompt" != "${hprompt#[Nn]}" ] ; then
			echo -e "You cannot use hsu without setting it up. Exiting..."
			exit
		else
			echo -e "Invalid input $hprompt. Please input (y)es or (n)o"
		fi
	done
	echo -e "If you read this message, there's a bug within the function\nPlease file an issue on GitHub, or even better, try and fix the bug yourself and open a pull request on GitHub."
	exit 1
}

# Start the module

if [ "$(readlink /proc/self/ns/mnt)" != "$(readlink /proc/1/ns/mnt)" ] ; then # Checks if hsu runs on global namespace, if not, re-runs on it
	exec su -M -c hsu $1
elif [ "$1" = "hide" ] ; then	# Check if an argument is passed through
	hideroot		#
elif [ "$1" = "help" ] ; then	#
	helpf
else
	oobecheck # Always use this to return to main menu
fi

exit 1 # This means something is broken, thus an error should be returned
