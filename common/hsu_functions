#!/system/bin/sh

# hsu - Hide su and Magisk binaries to prevent programs from reading the binaries using "ls"
# Copyright (C) 2020 xaedoplay @ XDA-Developers

# Functions file for hsu
# Note: Always return to main menu using the "oobecheck" function

ADBPATH=/data/adb
MMODPATH=$ADBPATH/modules
BBPATH=$ADBPATH/magisk/busybox
ENVPATH=$ADBPATH/.hsu
HSUFSPATH=$ENVPATH/hsu_fs
MODVER=PRERELEASE

if [ -f "$BBPATH" ]; then
	for ITEM in $($BBPATH --list | tail -n +3); do
		alias $ITEM="$BBPATH $ITEM"
	done
fi

# Common functions

# Header text
	# Line divider
	LINEDIV="====================================="
	# END Line divider
menuheader () {
	if [ -z "$ANDROID_SOCKET_adbd" ]; then
		clear
	fi
	echo ""
	echo -e "hsu - Hide su and other Magisk binaries"
	echo -e "by xaedoplay @ XDA-Developers"
	echo ""
	echo -e $LINEDIV
	echo -e " $1"
	echo -e $LINEDIV
}

# Root access check
rootcheck () {
	ls $ADBPATH>/dev/null 2>&1
	if [ "$?" != 0 ]; then
		su -c hsu "$@"
	exit
	fi
}

# Check if environment exists
oobecheck () {
	if [ -d "$ENVPATH" ]; then
		mainprompt
	else
		oobeprompt
	fi
}

# Environment initializer
initenv () {
	menuheader "Environment initialization"
	mkdir -p "$ENVPATH"
	if [ -d "$ENVPATH" ]; then
		echo -e "\nEnvironment initialized. Cloning files into environment..."
		mkdir -p $HSUFSPATH
		initenv_cloner >/dev/null
		echo -e "\nCompleted files cloning. Returning to main menu..."
		oobecheck
	else
		echo -e "\nAn error occured while initializing environment. Exiting...\n"
		echo -e $LINEDIV
		exit 1
	fi
}
	
	# Environment initializer cloner
	initenv_cloner () {
		tar -ch --exclude=*magisk* --exclude=*su* --exclude=resetprop /sbin/. | tar -x -C $HSUFSPATH
	}

# Root and magisk hide
hideroot () {
	if [ -d $HSUFSPATH/sbin ]; then
		if [ "$(readlink /proc/self/ns/mnt)" != "$(readlink /proc/1/ns/mnt)" ] ; then
			menuheader "Root hide\n\nWarning! If the terminal session closed (which is really rare to happen), you'd have to reboot to regain root and Magisk access"
			echo -e "\nERROR: Process using non-global mount namespace mode.\n\nPlease change the mount namespace mode in Magisk Manager settings,then input any key to continue."
			read -rsn 1
				su -c hsu hide
		else
			hideroot_exec
		fi
	else
		echo -e "Environment not initialized yet! Please do so by starting hsu without any arguments."
		exit 1
	fi
}
	# Execute instructions
	hideroot_exec () {
		menuheader "Root hide\n\nWarning! If the terminal session closed (which is really rare to happen), you'd have to reboot to regain root and Magisk access"
		echo -e "\nInitializing root hide..."
		mount $HSUFSPATH/sbin /sbin
		echo -e "\nRoot hide initialized."
		echo -e "Input any key to stop roothide"
		read -rsn 1
			umount /sbin
		menuheader "Root hide interrupted and stopped"
		echo -e "\nInput any key to return to main menu"
		read -rsn 1
			oobecheck
	}

# Clear module environment
clearenv () {
	menuheader "Clear module environment"
	while true; do
		echo -e "\nDo you wish to clear the module environment (y)es or (n)o? (case-insensitive)"
		read yn
		if [ "$yn" != "${yn#[Yy]}" ] ; then
			clearenv_exec
		elif [ "$yn" != "${yn#[Nn]}" ] ; then
			oobecheck
		else
			echo -e "Invalid input $yn. Please enter your choice"
		fi
	done
	echo -e "If you read this message, there's a bug within the function\nPlease file an issue on GitHub, or even better, try and fix the bug yourself and open a pull request on GitHub."
	exit 1
}
	# Execute clear module environment
	clearenv_exec () {
		echo -e "Clearing the module environment..."
		rm -rf $ENVPATH
		oobecheck
	}

# Print usage help
helpf () {
	echo -e "hsu $MODVER by xaedoplay@XDA\n"
	echo -e "Usage: $0 [help|hide]"
	echo -e "\thelp - Show this usage help"
	echo -e "\thide - Directly hide root and Magisk"
	exit 2
}

#TODO Autohide root when app is running
autohide () {
	menuheader "Autohide root and Magisk"
	echo -e "\nThis feature is not ready yet!\nInput any key to return to main menu"
	read -rsn 1
		oobecheck
}
